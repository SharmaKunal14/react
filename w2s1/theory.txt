# What is `NPM`?
-> NPM is simply a package manager that helps us to manage dependencies in our project.

# What is `Parcel/Webpack`? Why do we need it?
-> Parcel/Webpack are the BUNDLERS that give superpowers to our react apps. They perform many behind the scenes optimizations like minify, image optimization, etc. 

# What is `.parcel-cache`?
-> .parcel-cache is the set of files generated by the parcel bundler on the fly to reduce the subsequent build time.

# What is `npx` ?
-> npx is used to execute commands under npm. 

# What is difference between `dependencies` vs `devDependencies`?
-> dependencies are what we are gonna ship to the servers in production. 
devDependencies are what we need for just developmemt purposes like hot reload.

# What is Tree Shaking?
-> Tree shaking means that the unused code won't be included in the bundle.js during the build process.

# What is Hot Module Replacement?
-> HMR means that the state of the app is automatically updated whenever any change is induced in any of the files. This is achieved by making use of the file watchers.

# List down your favourite 5 superpowers of Parcel and describe any 3 of them in your
own words.
-> 1. minify
   2. Image optimization
   3. Caching
   4. remove console.log 
   5. Creates a server
   6. Consistent Hashing algorithm
   7. Dev and Production builds

Caching - This enables the parcel to quickly build our code time and again.
Remove console.log - These might have been used for debugging but in production they mean nothing.
Creates a server - We automatically are provided with a http server that perfectly simulates the real world.

# What is `.gitignore`? What should we add and not add into it?
-> .gitignore is a file that specifies which files and folders should not be staged while commiting. We should not add any file(s)/folder(s) that can be recreated automatically, on the fly at the server.

# What is the difference between `package.json` and `package-lock.json`?
-> Package.json specifies all of our project dependencies in a pretty concise manner, whereas the package-lock.json specifies the exact version of the dependency along with all the transitive dependencies required for our project.

# Why should I not modify `package-lock.json`?
-> Because this is the LOCK version of all the dependencies of our project. Only this file will ensure that our code runs the same way as in the local and in the production environment.

# What is `node_modules` ? Is it a good idea to push that on git?
-> node_modules stores all the files and folders related to a particular dependency in a project. It is not a good idea to push it on git as it is humongous in size and it can be generated on the fly from the package.json and package-lock.json file.

# What is the `dist` folder?
-> dist is a folder created by the parcel when we build our project to store a minified development/production ready version of our application.

# What is `browserlists`?
-> browserlists specifies the compatibility degree of our build with the older versions of the browsers.
